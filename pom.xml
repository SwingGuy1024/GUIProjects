<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.mm</groupId>
  <artifactId>GUIProjects</artifactId>
  <packaging>pom</packaging>
  <version>1.0-SNAPSHOT</version>
  <modules>
    <module>CValues</module>
    <module>Escape</module>
    <module>QuordleAid</module>
    <module>Anagram</module>
    <module>Amazing</module>
    <module>Penrose</module>
    <module>ClipHack</module>
    <module>BeatCounter</module>
    <module>Paragraph</module>
    <module>WWF</module>
    <module>Utilities</module>
    <module>EinsteinTiles</module>
    <module>Crypto</module>
    <module>FitGraph</module>
    <module>LinkBuilder</module>
    <module>RefBuilder</module>
    <module>AsciiTable</module>
  </modules>

  <!-- The extraJar property no longer works now that this is a base project. It turns out that you can't override properties-->
  <!-- in Maven like you can in Java. But I leave them in to make it clear how to add extra jar files if needed.-->
  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <mainClass>dummy</mainClass>
    <iconFile>replace me in the module pom file</iconFile>
    <appName>Replace me in the module pom file</appName>
    <!--<extraJar></extraJar> &lt;!&ndash; Leave blank, or add the name of a single jar dependency &ndash;&gt;-->
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <version>23.0.0</version>
    </dependency>

    <dependency>
      <groupId>com.formdev</groupId>
      <artifactId>flatlaf</artifactId>
      <version>3.2.2</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.apple/AppleJavaExtensions -->
    <dependency>
      <groupId>com.apple</groupId>
      <artifactId>AppleJavaExtensions</artifactId>
      <version>1.4</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <!--This is the Maven dependency plugin.-->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${project.build.directory}/libs
              </outputDirectory>
            </configuration>
          </execution>
          <execution>
            <goals>
              <goal>properties</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!--This creates an executable jar file. It should be used with the maven-dependency-plugin-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <archive>
            <manifest>
              <mainClass>${mainClass}</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <!--This one will bundle everything into a Mac Application bundle.-->
<!--      <plugin>-->
<!--        &lt;!&ndash; https://github.com/federkasten/appbundle-maven-plugin &ndash;&gt;-->
<!--        <groupId>sh.tak.appbundler</groupId>-->
<!--        <artifactId>appbundle-maven-plugin</artifactId>-->
<!--        <version>1.2.1-SNAPSHOT</version>-->
<!--        <configuration>-->
<!--          &lt;!&ndash;Put your custom Info.plist and Icon.icns under your maven resource paths (src/main/resources on default configuration).&ndash;&gt;-->
<!--          <mainClass>${mainClass}</mainClass>-->
<!--          &lt;!&ndash;<dictionaryFile>YourCustomInfo.plist</dictionaryFile>&ndash;&gt;-->
<!--          &lt;!&ndash;<additionalClasspath>${extraJar}</additionalClasspath>&ndash;&gt;-->
<!--          <iconFile>${iconFile}</iconFile>-->
<!--          &lt;!&ndash; Put this line in to bundle the jdk with the app. &ndash;&gt;-->
<!--          &lt;!&ndash;suppress MavenModelInspection &ndash;&gt;-->
<!--          &lt;!&ndash;<jrePath>${javaHome}/../..</jrePath>&ndash;&gt;-->
<!--          &lt;!&ndash;<jrePath>${env.JAVA_HOME}/../..</jrePath>&ndash;&gt;-->
<!--        </configuration>-->
<!--        <executions>-->
<!--          <execution>-->
<!--            <phase>package</phase>-->
<!--            <goals>-->
<!--              <goal>bundle</goal>-->
<!--            </goals>-->
<!--          </execution>-->
<!--        </executions>-->
<!--      </plugin>-->
      
<!--      This is an alternate plugin to bundle everything into a Mac Application Bundle, which-->
<!--      I added to support Java 17.-->
      <!-- Source: https://github.com/perdian/macosappbundler-maven-plugin -->
      <plugin>
        <groupId>de.perdian.maven.plugins</groupId>
        <artifactId>macosappbundler-maven-plugin</artifactId>
        <version>1.20.0</version>
        <configuration>
          <plist>
            <JVMMainClassName>${mainClass}</JVMMainClassName>

            <CFBundleIconFile>src/main/resources/${iconFile}</CFBundleIconFile>
            <CFBundleDisplayName>${appName}</CFBundleDisplayName>
            <CFBundleDevelopmentRegion>English</CFBundleDevelopmentRegion>
<!--            <CFBundleURLTypes>-->
<!--              <string>msa</string>-->
<!--            </CFBundleURLTypes>-->
            <JVMVersion>17+</JVMVersion>
<!--            <JVMRuntimePath>(unused)</JVMRuntimePath>-->
<!--            <JVMOptions>-->
<!--              <string>-Dfoo=bar</string>-->
<!--              <string>-Dx=y</string>-->
<!--            </JVMOptions>-->
<!--            <JVMArguments>-->
<!--              <string>-example</string>-->
<!--              <string>${someProperty}</string>-->
<!--            </JVMArguments>-->
          </plist>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>bundle</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Allows user to launch from maven: mvn exec:java -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.4.0</version>
        <configuration>
          <mainClass>${mainClass}</mainClass>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
